'use server';

import { openai } from '@ai-sdk/openai';
import { streamText } from 'ai';
import { createStreamableValue } from 'ai/rsc';

export async function generateTypeScriptExamples(context: string) {
  const stream = createStreamableValue('');

  (async () => {
    const { textStream } = streamText({
      model: openai('gpt-4o-mini'),
      system:
        'You are a TypeScript expert. Generate practical, real-world examples that demonstrate the concept being discussed. Include comments explaining the code.',
      prompt: `Generate 3 additional examples related to this TypeScript concept: ${context}.
      The examples should be simple, practical and easy to understand. They should demonstrate the concept being discussed.
      Each example should cover different topics like functions, classes, interfaces, etc.
      Return the result as code snippets with comments explaining the code in detail.
      At the top, include a comment that describes the concept being demonstrated.
      Each example will be separated by 1 blank line and a comment like this: "// Example 1", "// Example 2", "// Example 3".
      You must return the result as a pure code string without wrapping it in code blocks or markdown.
      At the end, include a comment says that the examples are generated by AI. Please check and use with discretion.
      `,
    });

    for await (const delta of textStream) {
      stream.update(delta);
    }

    stream.done();
  })();

  return { output: stream.value };
}
